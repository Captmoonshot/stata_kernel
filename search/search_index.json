{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"stata_kernel \u00b6 stata_kernel is a Jupyter kernel for Stata; It works on Windows, macOS, and Linux. Atom Jupyter Notebook Features \u00b6 stata_kernel is undergoing active development. It works now, but will be more polished in a week. Supports Windows, macOS, and Linux. Works with Jupyter Notebook and Atom's Hydrogen package Allows for inline and block comments. Display graphs (still working out limitations) Work with a remote session of Stata Receive results as they appear, not after the entire command finishes. Special shorthand \"magics\" to aid with, for example benchmarking code. Documentation website. Autocompletions as you type based on the variables, macros, and return objects currently in memory. Mata interactive support #delimit ; support. Cross-session history file Easily pull up help files within the kernel.","title":"Home"},{"location":"#stata_kernel","text":"stata_kernel is a Jupyter kernel for Stata; It works on Windows, macOS, and Linux. Atom Jupyter Notebook","title":"stata_kernel"},{"location":"#features","text":"stata_kernel is undergoing active development. It works now, but will be more polished in a week. Supports Windows, macOS, and Linux. Works with Jupyter Notebook and Atom's Hydrogen package Allows for inline and block comments. Display graphs (still working out limitations) Work with a remote session of Stata Receive results as they appear, not after the entire command finishes. Special shorthand \"magics\" to aid with, for example benchmarking code. Documentation website. Autocompletions as you type based on the variables, macros, and return objects currently in memory. Mata interactive support #delimit ; support. Cross-session history file Easily pull up help files within the kernel.","title":"Features"},{"location":"comparison_with_ipystata/","text":"Comparison with ipystata \u00b6 Except for Windows, this package takes a different approach to communication with Stata. On macOS and Linux, this controls the Stata console directly, which prevents speed degradation with larger data sets. In contrast, ipystata saves the data set to disk after each code cell, slowing execution. This is also a pure Jupyter kernel, whereas ipystata is a Jupyter \"magic\" within the Python kernel. This means that you don't need to have any knowledge of Python* and don't need to have packages like Pandas installed. * Python is amazing language, and if you want to move on to bigger data, I highly recommend learning Python.","title":"Comparison with ipystata"},{"location":"comparison_with_ipystata/#comparison-with-ipystata","text":"Except for Windows, this package takes a different approach to communication with Stata. On macOS and Linux, this controls the Stata console directly, which prevents speed degradation with larger data sets. In contrast, ipystata saves the data set to disk after each code cell, slowing execution. This is also a pure Jupyter kernel, whereas ipystata is a Jupyter \"magic\" within the Python kernel. This means that you don't need to have any knowledge of Python* and don't need to have packages like Pandas installed. * Python is amazing language, and if you want to move on to bigger data, I highly recommend learning Python.","title":"Comparison with ipystata"},{"location":"user_guide/configuration/","text":"Configuration \u00b6 The configuration file is named .stata_kernel.conf and is located in your home directory. On Windows, this attempts to find the path to your Stata executable. Otherwise, you need to set the path to your Stata executable before running the kernel. stata_path : The path to your Stata executable. On Mac, the default installation is in a place like /Applications/Stata/StataSE.app/Contents/MacOS/ There are two executables: StataSE and stata-se . The former opens the GUI and should be used if you choose automation mode, while the latter opens the console and should be used if you choose console mode. execution_mode : This can be set to automation or console , and is the manner in which this kernel talks to Stata. automation uses Stata Automation to communicate to Stata while console controls the console version of Stata. automation is only available on Windows or macOS. console is only available on macOS or Linux. On macOS, automation is the preferred option, though may have more bugs at the moment than console . cache_directory : This is the directory for the kernel to store temporary log files and graphs. By default, this is ~/.stata_kernel_cache , where ~ means your home directory. graph_format : This is the format to export and display graphs. By default this is svg , but if you're on an older version of Stata, you could switch to png . There is also some support for pdf if using Jupyter Notebook.","title":"Configuration"},{"location":"user_guide/configuration/#configuration","text":"The configuration file is named .stata_kernel.conf and is located in your home directory. On Windows, this attempts to find the path to your Stata executable. Otherwise, you need to set the path to your Stata executable before running the kernel. stata_path : The path to your Stata executable. On Mac, the default installation is in a place like /Applications/Stata/StataSE.app/Contents/MacOS/ There are two executables: StataSE and stata-se . The former opens the GUI and should be used if you choose automation mode, while the latter opens the console and should be used if you choose console mode. execution_mode : This can be set to automation or console , and is the manner in which this kernel talks to Stata. automation uses Stata Automation to communicate to Stata while console controls the console version of Stata. automation is only available on Windows or macOS. console is only available on macOS or Linux. On macOS, automation is the preferred option, though may have more bugs at the moment than console . cache_directory : This is the directory for the kernel to store temporary log files and graphs. By default, this is ~/.stata_kernel_cache , where ~ means your home directory. graph_format : This is the format to export and display graphs. By default this is svg , but if you're on an older version of Stata, you could switch to png . There is also some support for pdf if using Jupyter Notebook.","title":"Configuration"},{"location":"user_guide/install/","text":"Installation \u00b6 Prerequisites \u00b6 Python . In order to install the kernel, Python >= 3.5 needs to be installed. I suggest installing the Anaconda distribution , which doesn't require administrator privileges and is simple to install. If you want to use less disk space, install Miniconda , which includes few packages other than Python. Windows only: Install pywin32 , which lets Python talk to Stata. Choose the version of Python you have installed: Python 3.5 Python 3.6 Python 3.7 Link the Stata Automation library . The Stata executable is most likely in the folder C:\\Program Files (x86)\\Stata15 . In the installation directory, right-click on the Stata executable, for example, StataSE.exe. Choose \"Create Shortcut\". Right-click on the newly created \"Shortcut to StataSE.exe\", choose \"Property\", and change the Target from \"C:Program FilesStata13StataSE.exe\" to \"C:Program FilesStata13StataSE.exe\" /Register. Click \"OK\". Right-click on the updated \"Shortcut to StataSE.exe\"; choose \"Run as administrator\" Package Install \u00b6 To install the kernel, run: $ pip install stata_kernel $ python -m stata_kernel.install","title":"Installing"},{"location":"user_guide/install/#installation","text":"","title":"Installation"},{"location":"user_guide/install/#prerequisites","text":"Python . In order to install the kernel, Python >= 3.5 needs to be installed. I suggest installing the Anaconda distribution , which doesn't require administrator privileges and is simple to install. If you want to use less disk space, install Miniconda , which includes few packages other than Python. Windows only: Install pywin32 , which lets Python talk to Stata. Choose the version of Python you have installed: Python 3.5 Python 3.6 Python 3.7 Link the Stata Automation library . The Stata executable is most likely in the folder C:\\Program Files (x86)\\Stata15 . In the installation directory, right-click on the Stata executable, for example, StataSE.exe. Choose \"Create Shortcut\". Right-click on the newly created \"Shortcut to StataSE.exe\", choose \"Property\", and change the Target from \"C:Program FilesStata13StataSE.exe\" to \"C:Program FilesStata13StataSE.exe\" /Register. Click \"OK\". Right-click on the updated \"Shortcut to StataSE.exe\"; choose \"Run as administrator\"","title":"Prerequisites"},{"location":"user_guide/install/#package-install","text":"To install the kernel, run: $ pip install stata_kernel $ python -m stata_kernel.install","title":"Package Install"},{"location":"user_guide/limitations/","text":"Limitations \u00b6 If you make multiple graphs within the same block of code, you need to give them different names with the name() argument, or only one will show up. Currently can only make one image per minute on Windows/Mac unless you give different names for each graph with name() . This will be fixed soon.","title":"Limitations"},{"location":"user_guide/limitations/#limitations","text":"If you make multiple graphs within the same block of code, you need to give them different names with the name() argument, or only one will show up. Currently can only make one image per minute on Windows/Mac unless you give different names for each graph with name() . This will be fixed soon.","title":"Limitations"},{"location":"user_guide/troubleshooting/","text":"Troubleshooting \u00b6 If the pip install step gives you an error like \"DEPRECATION: Uninstalling a distutils installed project (pexpect) has been deprecated\", try $ pip install git+https://github.com/kylebarron/stata_kernel --ignore-install pexpect","title":"Troubleshooting"},{"location":"user_guide/troubleshooting/#troubleshooting","text":"If the pip install step gives you an error like \"DEPRECATION: Uninstalling a distutils installed project (pexpect) has been deprecated\", try $ pip install git+https://github.com/kylebarron/stata_kernel --ignore-install pexpect","title":"Troubleshooting"},{"location":"user_guide/usage/atom/","text":"Atom \u00b6 Download the Atom text editor and install the Hydrogen package , and language-stata syntax highlighting package. Open a .do file and run Ctrl - Enter to start the Stata kernel.","title":"Atom"},{"location":"user_guide/usage/atom/#atom","text":"Download the Atom text editor and install the Hydrogen package , and language-stata syntax highlighting package. Open a .do file and run Ctrl - Enter to start the Stata kernel.","title":"Atom"},{"location":"user_guide/usage/console/","text":"Console \u00b6 To use it as a console, run: $ jupyter console --kernel stata Example:","title":"Jupyter Console"},{"location":"user_guide/usage/console/#console","text":"To use it as a console, run: $ jupyter console --kernel stata Example:","title":"Console"},{"location":"user_guide/usage/notebook/","text":"Jupyter Notebook \u00b6 You can start the Jupyter Notebook server by running jupyter notebook in your terminal or command prompt. The New menu in the notebook should show an option for a Stata notebook.","title":"Jupyter Notebook"},{"location":"user_guide/usage/notebook/#jupyter-notebook","text":"You can start the Jupyter Notebook server by running jupyter notebook in your terminal or command prompt. The New menu in the notebook should show an option for a Stata notebook.","title":"Jupyter Notebook"}]}